// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: connectionType.proto

#ifndef PROTOBUF_connectionType_2eproto__INCLUDED
#define PROTOBUF_connectionType_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_connectionType_2eproto();
void protobuf_AssignDesc_connectionType_2eproto();
void protobuf_ShutdownFile_connectionType_2eproto();


enum EConnectionType {
  CONNECTION_TYPE_SELF = -1,
  CONNECTION_TYPE_UNKNOWN = 0,
  CONNECTION_TYPE_GATE = 1,
  CONNECTION_TYPE_PVE = 2,
  CONNECTION_TYPE_DISPATCHER = 3,
  CONNECTION_TYPE_MANAGER = 4,
  CONNECTION_TYPE_EXCHANGE = 5,
  CONNECTION_TYPE_RELATION = 6,
  CONNECTION_TYPE_PROXY = 7,
  CONNECTION_TYPE_PLAYER = 8,
  CONNECTION_TYPE_GM = 9,
  CONNECTION_TYPE_CROSS = 10
};
bool EConnectionType_IsValid(int value);
const EConnectionType EConnectionType_MIN = CONNECTION_TYPE_SELF;
const EConnectionType EConnectionType_MAX = CONNECTION_TYPE_CROSS;
const int EConnectionType_ARRAYSIZE = EConnectionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EConnectionType_descriptor();
inline const ::std::string& EConnectionType_Name(EConnectionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EConnectionType_descriptor(), value);
}
inline bool EConnectionType_Parse(
    const ::std::string& name, EConnectionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EConnectionType>(
    EConnectionType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::EConnectionType>() {
  return ::pb::EConnectionType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_connectionType_2eproto__INCLUDED
