// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: connectionType.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "connectionType.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::EnumDescriptor* EConnectionType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_connectionType_2eproto() {
  protobuf_AddDesc_connectionType_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "connectionType.proto");
  GOOGLE_CHECK(file != NULL);
  EConnectionType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_connectionType_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_connectionType_2eproto() {
}

void protobuf_AddDesc_connectionType_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024connectionType.proto\022\002pb*\347\002\n\017EConnecti"
    "onType\022!\n\024CONNECTION_TYPE_SELF\020\377\377\377\377\377\377\377\377\377"
    "\001\022\033\n\027CONNECTION_TYPE_UNKNOWN\020\000\022\030\n\024CONNEC"
    "TION_TYPE_GATE\020\001\022\027\n\023CONNECTION_TYPE_PVE\020"
    "\002\022\036\n\032CONNECTION_TYPE_DISPATCHER\020\003\022\033\n\027CON"
    "NECTION_TYPE_MANAGER\020\004\022\034\n\030CONNECTION_TYP"
    "E_EXCHANGE\020\005\022\034\n\030CONNECTION_TYPE_RELATION"
    "\020\006\022\031\n\025CONNECTION_TYPE_PROXY\020\007\022\032\n\026CONNECT"
    "ION_TYPE_PLAYER\020\010\022\026\n\022CONNECTION_TYPE_GM\020"
    "\t\022\031\n\025CONNECTION_TYPE_CROSS\020\n", 388);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "connectionType.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_connectionType_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_connectionType_2eproto {
  StaticDescriptorInitializer_connectionType_2eproto() {
    protobuf_AddDesc_connectionType_2eproto();
  }
} static_descriptor_initializer_connectionType_2eproto_;
const ::google::protobuf::EnumDescriptor* EConnectionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EConnectionType_descriptor_;
}
bool EConnectionType_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
